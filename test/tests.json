{ "groups":
    [
        { "group": "Linear functions",
          "tests":
            [
                {
                    "name": "Linear function (good)",
                    "filename": "pat-tests/linfun-good.pat",
                    "exit_code": 0
                },
                {
                    "name": "Linear function (bad #1: unused linear variable)",
                    "filename": "pat-tests/linfun-bad-1.pat",
                    "exit_code": 1
                },
                {
                    "name": "Linear function (bad #2: non-linear function closing over linear variable)",
                    "filename": "pat-tests/linfun-bad-2.pat",
                    "exit_code": 1
                },
                {
                    "name": "Linear function (bad #3: unused linear function)",
                    "filename": "pat-tests/linfun-bad-3.pat",
                    "exit_code": 1
                }
            ]
        },
        {
          "group": "Basic tests",
          "tests":
            [
                {
                    "name": "Arithmetic (1)",
                    "filename": "pat-tests/arith.pat",
                    "exit_code": 0
                },
                {
                    "name": "Arithmetic (2)",
                    "filename": "pat-tests/arith1.pat",
                    "exit_code": 0
                },
                {
                    "name": "Arithmetic (3)",
                    "filename": "pat-tests/arith2.pat",
                    "exit_code": 0
                },
                {
                    "name": "Functions",
                    "filename": "pat-tests/functions.pat",
                    "exit_code": 0
                },
                {
                    "name": "Sums (1)",
                    "filename": "pat-tests/sum-1.pat",
                    "exit_code": 0
                },
                {
                    "name": "Sums (2)",
                    "filename": "pat-tests/sum-2.pat",
                    "exit_code": 0
                },
                {
                    "name": "Annotated let (1)",
                    "filename": "pat-tests/let-annot-1.pat",
                    "exit_code": 0
                },
                {
                    "name": "Annotated let (2)",
                    "filename": "pat-tests/let-annot-2.pat",
                    "exit_code": 0
                },
                {
                    "name": "Annotated let (3)",
                    "filename": "pat-tests/let-annot-3.pat",
                    "exit_code": 0
                }
            ]
        },
        { "group": "Correct examples",
          "tests":
            [
                {"name": "Account", "filename": "examples/de_liguoro_padovani/account.pat", "exit_code": 0},
                {"name": "Account with Future", "filename": "examples/de_liguoro_padovani/account_future.pat", "exit_code": 0},
                {"name": "Fibonacci", "filename": "examples/savina/fib.pat", "exit_code": 0},
                {"name": "Fibonacci with Pairs", "filename": "examples/savina/fib_pairs.pat", "exit_code": 0},
                {"name": "Future", "filename": "examples/de_liguoro_padovani/future.pat", "exit_code": 0},
                {"name": "Future with explicit fail guard", "filename": "examples/de_liguoro_padovani/futurefail.pat", "exit_code": 0},
                {"name": "Lock", "filename": "examples/de_liguoro_padovani/lock.pat", "exit_code": 0},
                {"name": "Master-Worker", "filename": "examples/de_liguoro_padovani/master_worker.pat", "exit_code": 0},
                {"name": "n-Robots", "filename": "examples/robotsn.pat", "exit_code": 0},
                {"name": "Guard annotation is a subpattern", "filename": "examples/pat_constr.pat", "exit_code": 0}
            ]
        },
        { "group": "Incorrect examples",
          "tests":
            [
                {
                    "name": "Lock",
                    "filename": "errors/lock.pat",
                    "exit_code": 1
                },
                {
                    "name": "Future",
                    "filename": "errors/future.pat",
                    "exit_code": 1
                },
                {
                    "name": "Use after free",
                    "filename": "errors/useafterfree.pat",
                    "exit_code": 1
                },
                {
                    "name": "Use after free (2)",
                    "filename": "errors/weird.pat",
                    "exit_code": 1
                },
                {
                    "name": "Use after free (with aliasing)",
                    "filename": "errors/weird2.pat",
                    "exit_code": 1
                },
                {
                    "name": "Aliasing through communication",
                    "filename": "errors/weird3.pat",
                    "exit_code": 1
                },
                {
                    "name": "Aliasing by returning received endpoint",
                    "filename": "errors/weird4.pat",
                    "exit_code": 1
                },
                {"name": "Insufficient type information", "filename": "errors/pat_constr.pat", "exit_code": 1},
                {"name": "Non-exhaustive guards", "filename": "errors/pat_constr2.pat", "exit_code": 1},
                {"name": "Additional non-supported non-fail guard with nontrivial continuation", "filename": "errors/pat_constr3.pat", "exit_code": 1},
                {"name": "Additional non-supported free guard", "filename": "errors/pat_constr4.pat", "exit_code": 1}
            ]
        }
    ]
}
